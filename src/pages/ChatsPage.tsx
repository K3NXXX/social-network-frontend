import { Box, Typography, Avatar, TextField, IconButton } from '@mui/material';
import React, { useState, useRef, useEffect } from 'react';
import ChatBar from '../components/ChatBar';
import Message from '../components/Message';
import sendIcon from '../assets/paper-plane.svg';

const ChatsPage: React.FC = () => {
  const [selectedChat, setSelectedChat] = useState<null | string>(null);

  const handleChatSelect = (chatId: string) => {
    setSelectedChat(chatId);
  };

  //—Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
  const currentUserId = 'user1';
  const [messages, setMessages] = useState([
    { senderId: 'user1', content: '–ü—Ä–∏–≤—ñ—Ç!' },
    { senderId: 'user2', content: '–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —Ç–∏?' },
    { senderId: 'user1', content: '–í—Å–µ –æ–∫. –ß–∏–º –∑–∞–π–º–∞—î—à—Å—è —Å—å–æ–≥–æ–¥–Ω—ñ?' },
    {
      senderId: 'user2',
      content:
        '–¢–∞ –Ω—ñ—á–æ–≥–æ –æ—Å–æ–±–ª–∏–≤–æ–≥–æ. –í–∏—Ä—ñ—à–∏–≤ —Ç—Ä–æ—Ö–∏ –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–¥ —Å–∞–π—Ç–æ–º, –ø–æ—Ç—ñ–º, –º–æ–∂–ª–∏–≤–æ, –≤–∏–π–¥—É –Ω–∞ –ø—Ä–æ–≥—É–ª—è–Ω–∫—É, —è–∫—â–æ –Ω–µ –±—É–¥–µ –¥–æ—â—É.',
    },
    { senderId: 'user1', content: '–ó–≤—É—á–∏—Ç—å –¥–æ–±—Ä–µ.' },
    {
      senderId: 'user1',
      content:
        '–î–æ —Ä–µ—á—ñ, —è –Ω–∞—Ä–µ—à—Ç—ñ –¥–æ–¥–∏–≤–∏–≤—Å—è —Ç–æ–π —Ñ—ñ–ª—å–º, –ø—Ä–æ —è–∫–∏–π —Ç–∏ –≥–æ–≤–æ—Ä–∏–≤. –î—É–∂–µ —Å–ø–æ–¥–æ–±–∞–≤—Å—è —Ñ—ñ–Ω–∞–ª, —Ö–æ—á–∞ –±—É–ª–æ —Ç—Ä–æ—Ö–∏ –∑–∞—Ç—è–≥–Ω—É—Ç–æ –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ.',
    },
    {
      senderId: 'user2',
      content:
        '–Ø –∂ –∫–∞–∑–∞–≤, –≤–∞—Ä—Ç–æ –±—É–ª–æ –¥–æ–¥–∏–≤–∏—Ç–∏—Å—å. –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ —à–∏–∫–∞—Ä–Ω–∞, –∞ –≥–æ–ª–æ–≤–Ω–∏–π –≥–µ—Ä–æ–π –¥—É–∂–µ —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω–∏–π.',
    },
    { senderId: 'user1', content: '–¢–∞–∫, –∞–∫—Ç–æ—Ä —Å–ø—Ä–∞–≤–¥—ñ –∫—Ä—É—Ç–∏–π. –Ø–∫ –¥—É–º–∞—î—à, –±—É–¥–µ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è?' },
    {
      senderId: 'user2',
      content:
        '–°—É–º–Ω—ñ–≤–∞—é—Å—å. –•—ñ–±–∞ —â–æ —É –≤–∏–≥–ª—è–¥—ñ –ø—Ä–∏–∫–≤–µ–ª—É –∞–±–æ —Å–µ—Ä—ñ–∞–ª—É. –ê–ª–µ –∑–∞–≥–∞–ª–æ–º, –¥—É–º–∞—é, —ñ—Å—Ç–æ—Ä—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.',
    },
    {
      senderId: 'user1',
      content:
        '–û–∫–µ–π. –î–æ —Ä–µ—á—ñ, —è —â–µ –∑–Ω–∞–π—à–æ–≤ —ñ–Ω—Ç–µ—Ä–≤‚Äô—é –∑ —Ä–µ–∂–∏—Å–µ—Ä–æ–º, –≤—ñ–Ω –ø–æ—è—Å–Ω—é—î –±–∞–≥–∞—Ç–æ —Ä–µ—á–µ–π, —è–∫—ñ —Å–ø–æ—á–∞—Ç–∫—É –±—É–ª–∏ –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª–∏–º–∏. –Ø–∫—â–æ —Ü—ñ–∫–∞–≤–æ ‚Äî –º–æ–∂—É —Å–∫–∏–Ω—É—Ç–∏.',
    },
    {
      senderId: 'user2',
      content:
        '–ë—É–ª–æ –± —Å—É–ø–µ—Ä! –Ø –ª—é–±–ª—é –¥–∏–≤–∏—Ç–∏—Å—å —Ç–∞–∫—ñ —Ä–æ–∑–±–æ—Ä–∏ –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ñ—ñ–ª—å–º—É ‚Äî —ñ–Ω–æ–¥—ñ —Ä–æ–∑—É–º—ñ—î—à –∑–æ–≤—Å—ñ–º —ñ–Ω—à–µ, –Ω—ñ–∂ –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≥–ª—è–¥—É.',
    },
    { senderId: 'user1', content: '–î–æ–±—Ä–µ, –∑–∞—Ä–∞–∑ –∑–Ω–∞–π–¥—É.' },
    { senderId: 'user2', content: 'üëå' },
  ]);

  const [messageInput, setMessageInput] = useState('');

  const handleSendMessage = (content: string) => {
    if (content.length === 0) return;
    setMessages([...messages, { senderId: 'user1', content: content }]);
    setMessageInput('');
  };

  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  }, [messages]);

  return (
    <Box
      sx={{
        display: 'flex',
        minHeight: '100vh',
        minWidth: '100vw',
        overflow: 'hidden',
      }}
    >
      {/* –±—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å */}
      <Box
        sx={{
          width: '20%',
          bgcolor: 'white',
          minHeight: '100vh',
          display: 'flex',
          flexDirection: 'column',
          borderRight: '1px solid #dedede',
        }}
      >
        <Typography
          variant="body1"
          sx={{ fontSize: 25, fontWeight: 'bold', margin: '30% 0 5% 5%', color: 'black' }}
        >
          –ß–∞—Ç–∏
        </Typography>
        {/* sx={{ flexGrow: 1, overflowY: 'scroll' }} */}
        <Box>
          {['1', '2', '3', '4', '5', '6', '7', '8'].map((chatId) => (
            <ChatBar
              key={chatId}
              chatId={chatId}
              onSelect={handleChatSelect}
              sx={selectedChat === chatId ? { bgcolor: '#e6e6e6' } : null}
            />
          ))}
        </Box>
      </Box>

      {/* —á–∞—Ç */}
      {!selectedChat ? (
        <Box
          sx={{
            flex: 1,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            bgcolor: 'white',
          }}
        >
          <Typography variant="h6" color="text.secondary">
            –í–∏–±–µ—Ä—ñ—Ç—å —á–∞—Ç, —â–æ–± –ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è
          </Typography>
        </Box>
      ) : (
        <Box
          sx={{
            flex: 1,
            display: 'flex',
            flexDirection: 'column',
            height: '100vh',
            bgcolor: 'white',
          }}
        >
          <Box
            sx={{
              width: '100%',
              height: 70,
              borderBottom: '1px solid #dedede',
              display: 'flex',
            }}
          >
            <Box
              sx={{
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                px: 1.5,
              }}
            >
              <Avatar
                sx={{
                  width: 45,
                  height: 45,
                  display: 'flex',
                  justifyContent: 'center',
                  alignItems: 'center',
                  bgcolor: '#9885f4',
                  color: 'white',
                }}
              >
                <Typography variant="body1" component="p" sx={{ fontSize: '14px' }}>
                  –Ü–ü
                </Typography>
              </Avatar>
            </Box>
            <Box
              sx={{
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'center',
              }}
            >
              <Typography
                variant="body1"
                component="p"
                sx={{ color: 'black', fontWeight: 'bold', fontSize: '16px' }}
              >
                {' '}
                –Ü–º'—è –ü—Ä—ñ–∑–≤–∏—â–µ{' '}
              </Typography>
              <Typography variant="body1" component="p" sx={{ color: 'grey', fontSize: '14px' }}>
                {' '}
                –í–æ—Å—Ç–∞–Ω–Ω—î –≤ –º–µ—Ä–µ–∂—ñ 1 –≥–æ–¥. —Ç–æ–º—É
              </Typography>
            </Box>
          </Box>
          <Box
            ref={scrollRef}
            sx={{
              width: '100%',
              display: 'flex',
              flexDirection: 'column',
              overflowY: 'auto',
              flex: 1,
            }}
          >
            {messages.map(({ senderId, content }, index) => (
              <Message
                key={index}
                content={content}
                isFromCurrentUser={senderId === currentUserId}
              />
            ))}
          </Box>
          <Box
            sx={{
              width: '100%',
              height: '4.5rem',
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
            }}
          >
            <Box
              sx={{
                width: '95%',
                height: '70%',
                marginBottom: '0.5rem',
                display: 'flex',
              }}
            >
              <TextField
                variant="outlined"
                sx={{
                  flex: 1,
                  '& .MuiOutlinedInput-root': {
                    borderRadius: '30px',
                    '& fieldset': {
                      border: '1px solid #dedede',
                    },
                  },
                  color: '#dedede',
                }}
                placeholder="–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—É—Ç..."
                value={messageInput}
                onChange={(e) => setMessageInput(e.target.value)}
              ></TextField>
              <IconButton
                onClick={() => handleSendMessage(messageInput)}
                sx={{
                  width: 50,
                  height: '100%',
                  borderRadius: '35%',
                  border: '1px solid #dedede',
                  marginLeft: '10px',
                  display: 'flex',
                  justifyContent: 'center',
                  alignItems: 'center',
                }}
              >
                <img src={sendIcon} alt="send" style={{ width: 24, height: 24 }} />
              </IconButton>
            </Box>
          </Box>
        </Box>
      )}
    </Box>
  );
};

export default ChatsPage;
